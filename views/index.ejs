<h1><%= title %></h1>
<canvas id="canvas" width="1500" height="1500">
	
</canvas>
<script type="text/javascript" charset="utf-8">
	var canvas;
	var ctx;
	var dx = 5;
	var dy = 5;
	var x = 30;
	var y = 30;
	var WIDTH = 1362;
	var HEIGHT = 1362;
	var img = new Image();
	var collision = 0;
	var PUCK_SIZE = 10;
	var socket;
	var enemies = new Object;
	var user = "<%= user %>";
	function rect(x,y,w,h) {
		ctx.beginPath();
		ctx.rect(x,y,w,h);
		ctx.closePath();
		ctx.fill();
	}
	
	function clear() {
		ctx.clearRect(0, 0, WIDTH, HEIGHT);
		ctx.drawImage(img, 0, 0);
	}
	
	function init() {
		canvas = document.getElementById("canvas");
		ctx = canvas.getContext("2d");
		img.src = "/images/maze.gif";
		return setInterval(draw, 100);
	}
	
	function doKeyDown(evt){
		switch (evt.keyCode) {
			case 87:  /* Up arrow was pressed */
				if (y - dy > 0){
					y -= dy;
					clear();
					checkcollision();
					if (collision == 1){
						y += dy;
						collision = 0;
					}
				}
			
				break;
			case 83:  /* Down arrow was pressed */
				if (y + dy < HEIGHT ){
					y += dy;
					clear();
					checkcollision();
					if (collision == 1){
						y -= dy;
						collision = 0;
					}
				}
			
				break;
			case 65:  /* Left arrow was pressed */
				if (x - dx > 0){
					x -= dx;
					clear();
					checkcollision();
					if (collision == 1){
						x += dx;
						collision = 0;
					}
				}
				break;
			case 68:  /* Right arrow was pressed */
				if ((x + dx < WIDTH)){
					x += dx;
					clear();
					checkcollision();
					if (collision == 1){
						x -= dx;
						collision = 0;
					}
				}
				break;
		}
		if (collision == 0) {
			socket.send(user + ":" + x + ":" + y);
		};
	}
	
	function checkcollision() {
		var imgd = ctx.getImageData(x, y, PUCK_SIZE, PUCK_SIZE);
		var pix = imgd.data;
		for (var i = 0; n = pix.length, i < n; i += 4) {
			if (pix[i] == 0) {
				collision = 1;
			}
		}
	}
	
	function draw() {
		clear();
		for(e in enemies) {
			ctx.fillStyle = "blue";
			rect(enemies[e][0], enemies[e][1], PUCK_SIZE,PUCK_SIZE);
			ctx.fillText(e, enemies[e][0], enemies[e][1]);
		}
		ctx.fillStyle = "green";
		rect(x, y, PUCK_SIZE,PUCK_SIZE);
	}
	
	init();
	window.addEventListener('keydown', doKeyDown, true);
	
	$(document).ready(function(){
		socket = new io.Socket();
		socket.connect();
		socket.on('message', function(data){
			var arrData = data.split(":")
			enemies[arrData[0]] = [arrData[1], arrData[2]];
		});
	});
</script>